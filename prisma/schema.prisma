// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String
  email     String    @unique
  follows   User[]    @relation("UserFollows")
  followers User[]    @relation("UserFollows")
  sessions  Session[]
}

model Content {
  id          String      @id @default(uuid())
  name        String
  url         String
  description String?
  type        ContentType @default(VIDEO)
  course_id   String
  topic       Topic       @relation(fields: [course_id], references: [id], onDelete: Cascade)
  position    Int
  sessions    Session[]
}

model Session {
  id         String   @id @default(uuid())
  content_id String
  content    Content  @relation(fields: [content_id], references: [id], onDelete: NoAction)
  duration   Int
  user_id    String
  user       User     @relation(fields: [user_id], references: [id], onDelete: NoAction)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Course {
  id           String   @id @default(uuid())
  name         String
  description  String
  course_alias String
  topics       Topic[]
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model Topic {
  id          String    @id @default(uuid())
  name        String
  description String
  course_id   String
  Course      Course    @relation(fields: [course_id], references: [id], onDelete: Cascade)
  contents    Content[]
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
}

enum ContentType {
  VIDEO
  PPT
}
